---
name: "GitHub Actions Example"

"on":
  workflow_dispatch:
  pull_request:
  push: { branches: [master] }

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      working-directory: terraform
      TF_WORKSPACE: my-workspace
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY }}'
          aws-secret-access-key: '${{ secrets.SECRET_ACCESS_KEY }}'
          aws-region: ap-south-1         
      - name: Check out code
        uses: actions/checkout@v2
      - name: debugging
        run: |
          pwd
          ls  
      - name: Run Terrascan
        id: terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: 'terraform'
          iac_version: 'v14'
          policy_type: 'aws'
          only_warn: true
          #iac_dir: "."
        #sarif_upload: true
        #non_recursive:
        #iac_dir:
        #policy_path:
        #skip_rules:
        #config_path:

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.4

      - name: Terraform Fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform init
        id: init
        run: terraform init
        working-directory: ${{ env.working-directory }}
        env:
          TF_CLI_ARGS_init: "-backend-config=role_arn=arn:aws:iam::389028963485:role/my-github-actions-role -upgrade -reconfigure"
          TF_VAR_assume_role: "my-github-actions-role"

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color
        working-directory: ${{ env.working-directory }}
        env:
          TF_VAR_assume_role: "my-github-actions-role"

      - name: Plan output
        id: output
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            ### Workspace

            \`${process.env.TF_WORKSPACE}\`

            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>

            \`\`\`hcl
            ${process.env.PLAN}
            \`\`\`

            </details>

            **Pusher**: @${{ github.actor }}
            **Action**: ${{ github.event_name }}
            `;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ env.working-directory }}
        env:
          TF_VAR_assume_role: "my-github-actions-role"

      - name: Install InSpec
        uses: actionshub/chef-install@main
        with:
          channel: current
          project: inspec
        env:
          #CHEF_LICENSE: ACCEPT
          chef_license: accept
          
      - name: Assume Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-south-1
          role-to-assume: arn:aws:iam::389028963485:role/my-github-actions-role
          role-duration-seconds: 960
          role-skip-session-tagging: true          
      - name: Run Snyk to check Kubernetes manifest file for issues
        uses: snyk/actions/iac@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'https://www.zaproxy.org/'